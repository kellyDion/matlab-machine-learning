
%% UKFWEIGHT Unscented Kalman Filter weight calculation
%%  Form
%   d = UKFWeight( d )
%
%% Description
%   Unscented Kalman Filter weights.
%
%   The weight matrix is used by the matrix form of the Unscented
%   Transform. Both UKSPredict and UKSUpdate use the data structure
%   generated by this function.
%
%   The constant alpha determines the spread of the sigma points around x
%   and is usually set to between 10e-4 and 1. beta incorporates prior 
%   knowledge of the distribution of x and is 2 for a Gaussian 
%   distribution. kappa is set to 0 for state estimation and 3 - number of
%   states for parameter estimation.
%   d = UKFWeight( d )
%% Inputs
%   d	(1,1)	Data structure with constants
%               .kappa	(1,1)	0 for state estimation, 3-#states for 
%                               parameter estimation
%               .m      (:,1)	Vector of mean states
%               .alpha	(1,1)	Determines spread of sigma points
%               .beta   (1,1)	Prior knowledge - 2 for Gaussian
%
%% Outputs
%  d	(1,1)	Data structure with constants
%               .w      (2*n+1,2*n+1)   Weight matrix
%               .wM     (1,2*n+1)       Weight array
%               .wC     (2*n+1,1)       Weight array
%               .c      (1,1)           Scaling constant
%               .lambda	(1,1)           Scaling constant
%

function d = UKFWeight( d )

% Compute the fundamental constants
n           = length(d.m);
a2          = d.alpha^2;
d.lambda    = a2*(n + d.kappa) - n;
nL          = n + d.lambda;
wMP         = 0.5*ones(1,2*n)/nL;
d.wM        = [d.lambda/nL               wMP]';
d.wC        = [d.lambda/nL+(1-a2+d.beta) wMP];

d.c         = sqrt(nL);

% Build the matrix
f           = eye(2*n+1) - repmat(d.wM,1,2*n+1);
d.w         = f*diag(d.wC)*f';
